#!/usr/bin/env perl

# Pragmas.
use strict;
use warnings;

# Modules.
use App::Image::Generator;

# Version.
our $VERSION = 0.02;

# Run.
exit App::Image::Generator->new->run;

# Print version.
sub VERSION_MESSAGE {
	print $VERSION."\n";
	exit 0;
}

__END__

=pod

=encoding utf8

=head1 NAME

image-generator - Script to generate video.

=head1 SYNOPSIS

 image-generator [-h] [-i input_dir] [-s size] [-v] [--version] output_file

=head1 DESCRIPTION

 image-generator script uses Image::Random or Image::Select classes to create image.

=head1 ARGUMENTS

=over 8

=item * C<-h>

 Print help.

=item * C<-i input_dir>

 Input directory with images.
 Default value is nothing, then generates random images.

=item * C<-s size>

 Image size.
 Default value is 1920x1080.

=item * C<-v>

 Verbose mode.

=item * C<--version>

 Print version of script.

=item * C<output_file>

 Output file.
 e.g. foo.jpg
 e.g. foo.bmp

=back

=head1 EXAMPLE1

 image-generator

 # Output:
 # Usage: /home/skim/perl5/bin/image-generator [-h] [-i input_dir] [-s size] [-v]
 #         [--version] output_file
 # 
 #         -h              Print help.
 #         -i input_dir    Input directory with images (default value is nothing).
 #         -s size         Size (default value is 1920x1080).
 #         -v              Verbose mode.
 #         --version       Print version.

=head1 EXAMPLE2

 image-generator foo.jpg

 # Output:
 # -nothing-
 # Created foo.jpg file in local directory.

=head1 EXAMPLE3

 image-generator -s 100x100 foo.jpg

 # Output:
 # -nothing-
 # Created foo.jpg file in local directory.

=head1 EXAMPLE4

 image-generator -i /data/images/ foo.jpg

 # Output:
 # -nothing-
 # Created foo.jpg file in local directory, generated from images in /data/images.

=head1 REPOSITORY

L<https://github.com/tupinek/App-Image-Generator>

=head1 AUTHOR

Michal Špaček L<mailto:skim@cpan.org>

L<http://skim.cz>

=head1 LICENSE AND COPYRIGHT

 © 2015 Michal Špaček
 BSD 2-Clause License

=head1 VERSION

0.02

=cut
